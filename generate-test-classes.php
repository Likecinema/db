<?php

/**
 * This script is used to generate test classes for all variations of PDO attributes.
 * It looks like there is no alternative at the moment to run a full test class several times with different parameters:
 *
 * https://github.com/sebastianbergmann/phpunit/issues/3212#issuecomment-434498391
 */

use Brick\Db\Tests\Driver\PDO\PDOMySQLDriverTest;
use Brick\Db\Tests\Driver\PDO\PDOSQLiteDriverTest;

require __DIR__ . '/vendor/autoload.php';

/**
 * Read the template.
 */

$fp = fopen(__FILE__, 'r');
fseek($fp, __COMPILER_HALT_OFFSET__);
$template = stream_get_contents($fp);
fclose($fp);

/**
 * Configure the base classes.
 */

$classes = [
    PDOMySQLDriverTest::class,
    PDOSQLiteDriverTest::class
];

/**
 * PDO attribute names: the first entry in each array is the full name (PDO::*),
 * and the second entry is a short name used in the test class name.
 */

$attributeNames = [
    \PDO::ATTR_ERRMODE => ['ATTR_ERRMODE', 'ERRMODE'],
    \PDO::ATTR_EMULATE_PREPARES => ['ATTR_EMULATE_PREPARES', 'EMULATE_PREPARES'],
    \PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => ['MYSQL_ATTR_USE_BUFFERED_QUERY', 'MYSQL_USE_BUFFERED_QUERY']
];

$attributeValues = [
    \PDO::ATTR_ERRMODE => [
        \PDO::ERRMODE_SILENT => ['ERRMODE_SILENT', 'SILENT'],
        \PDO::ERRMODE_WARNING => ['ERRMODE_WARNING', 'WARNING'],
        \PDO::ERRMODE_EXCEPTION => ['ERRMODE_EXCEPTION', 'EXCEPTION']
    ]
];

foreach ($classes as $baseClass) {
    foreach ($baseClass::getAttributeCombinations() as $attributes) {
        $php = $template;
        $php = str_replace('_BASECLASS_', '\\' . $baseClass, $php);

        $className = (new \ReflectionClass($baseClass))->getShortName();
        $className = substr($className, 0, -4); // remove "Test"

        $attributesArray = '';

        foreach ($attributes as $attribute => $value) {
            $attributeName = $attributeNames[$attribute][1];
            $attributeValue = is_bool($value) ? ($value ? 'TRUE' : 'FALSE') : $attributeValues[$attribute][$value][1];

            $className .= '_' . $attributeName;
            $className .= '_' . $attributeValue;

            $attributeName = '\PDO::' . $attributeNames[$attribute][0];
            $attributeValue = is_bool($value) ? ($value ? 'true' : 'false') : '\PDO::' . $attributeValues[$attribute][$value][0];

            $attributesArray .= "\n" . str_repeat(' ', 12);
            $attributesArray .= $attributeName . ' => ';
            $attributesArray .= $attributeValue . ',';
        }

        $className .= '_Test';

        $php = str_replace('_CLASSNAME_', $className, $php);
        $php = str_replace('/*ATTRIBUTES*/', $attributesArray, $php);

        $fileName = __DIR__ . '/tests/Driver/PDO/Variations/' . $className . '.php';

        file_put_contents($fileName, $php);
    }
}

echo "Done.\n";

/**
 * Following is the template for autogenerated test classes.
 */

__halt_compiler();<?php

declare(strict_types=1);

namespace Brick\Db\Tests\Driver\PDO\Variations;

/**
 * Tests for _BASECLASS_ with specific PDO attributes.
 * This class is autogenerated, do not edit.
 */
class _CLASSNAME_ extends _BASECLASS_
{
    /**
     * @inheritdoc
     */
    protected static function getAttributes() : array
    {
        return [/*ATTRIBUTES*/
        ];
    }
}
